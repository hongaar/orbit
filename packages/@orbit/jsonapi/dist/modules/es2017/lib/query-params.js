"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function flattenObjectToParams(obj, path) {
    if (path === void 0) { path = []; }
    var params = [];
    Object.keys(obj).forEach(function (key) {
        if (!obj.hasOwnProperty(key)) {
            return;
        }
        var newPath = path.slice();
        newPath.push(key);
        if (typeof obj[key] === 'object') {
            Array.prototype.push.apply(params, flattenObjectToParams(obj[key], newPath));
        }
        else {
            params.push({
                path: newPath,
                val: obj[key]
            });
        }
    });
    return params;
}
function encodeQueryParams(obj) {
    return flattenObjectToParams(obj)
        .map(function (param) {
        if (param.path.length === 1) {
            param.path = param.path[0];
        }
        else {
            var firstSegment = param.path[0];
            var remainingSegments = param.path.slice(1);
            param.path = firstSegment + '[' + remainingSegments.join('][') + ']';
        }
        return param;
    })
        .map(function (param) { return encodeURIComponent(param.path) + '=' + encodeURIComponent(param.val); })
        .join('&');
}
exports.encodeQueryParams = encodeQueryParams;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcnktcGFyYW1zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2xpYi9xdWVyeS1wYXJhbXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBK0IsR0FBRyxFQUFFLElBQVM7SUFBVCxxQkFBQSxFQUFBLFNBQVM7SUFDM0MsSUFBSSxNQUFNLEdBQUcsRUFBRSxDQUFDO0lBRWhCLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLFVBQUEsR0FBRztRQUMxQixFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQUMsTUFBTSxDQUFDO1FBQUMsQ0FBQztRQUV6QyxJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDM0IsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUVsQixFQUFFLENBQUMsQ0FBQyxPQUFPLEdBQUcsQ0FBQyxHQUFHLENBQUMsS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ2pDLEtBQUssQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUscUJBQXFCLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFDL0UsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ04sTUFBTSxDQUFDLElBQUksQ0FBQztnQkFDVixJQUFJLEVBQUUsT0FBTztnQkFDYixHQUFHLEVBQUUsR0FBRyxDQUFDLEdBQUcsQ0FBQzthQUNkLENBQUMsQ0FBQztRQUNMLENBQUM7SUFDSCxDQUFDLENBQUMsQ0FBQztJQUVILE1BQU0sQ0FBQyxNQUFNLENBQUM7QUFDaEIsQ0FBQztBQUVELDJCQUFrQyxHQUFHO0lBQ25DLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQyxHQUFHLENBQUM7U0FDOUIsR0FBRyxDQUFDLFVBQUEsS0FBSztRQUNSLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDNUIsS0FBSyxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzdCLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNOLElBQUksWUFBWSxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDakMsSUFBSSxpQkFBaUIsR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM1QyxLQUFLLENBQUMsSUFBSSxHQUFHLFlBQVksR0FBRyxHQUFHLEdBQUcsaUJBQWlCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUcsQ0FBQztRQUN2RSxDQUFDO1FBQ0QsTUFBTSxDQUFDLEtBQUssQ0FBQztJQUNmLENBQUMsQ0FBQztTQUNELEdBQUcsQ0FBQyxVQUFBLEtBQUssSUFBSSxPQUFBLGtCQUFrQixDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxHQUFHLEdBQUcsa0JBQWtCLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFwRSxDQUFvRSxDQUFDO1NBQ2xGLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUNmLENBQUM7QUFkRCw4Q0FjQyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGZsYXR0ZW5PYmplY3RUb1BhcmFtcyhvYmosIHBhdGggPSBbXSkge1xyXG4gIGxldCBwYXJhbXMgPSBbXTtcclxuXHJcbiAgT2JqZWN0LmtleXMob2JqKS5mb3JFYWNoKGtleSA9PiB7XHJcbiAgICBpZiAoIW9iai5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7IHJldHVybjsgfVxyXG5cclxuICAgIGxldCBuZXdQYXRoID0gcGF0aC5zbGljZSgpO1xyXG4gICAgbmV3UGF0aC5wdXNoKGtleSk7XHJcblxyXG4gICAgaWYgKHR5cGVvZiBvYmpba2V5XSA9PT0gJ29iamVjdCcpIHtcclxuICAgICAgQXJyYXkucHJvdG90eXBlLnB1c2guYXBwbHkocGFyYW1zLCBmbGF0dGVuT2JqZWN0VG9QYXJhbXMob2JqW2tleV0sIG5ld1BhdGgpKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHBhcmFtcy5wdXNoKHtcclxuICAgICAgICBwYXRoOiBuZXdQYXRoLFxyXG4gICAgICAgIHZhbDogb2JqW2tleV1cclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG4gIHJldHVybiBwYXJhbXM7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVRdWVyeVBhcmFtcyhvYmopIHtcclxuICByZXR1cm4gZmxhdHRlbk9iamVjdFRvUGFyYW1zKG9iailcclxuICAgIC5tYXAocGFyYW0gPT4ge1xyXG4gICAgICBpZiAocGFyYW0ucGF0aC5sZW5ndGggPT09IDEpIHtcclxuICAgICAgICBwYXJhbS5wYXRoID0gcGFyYW0ucGF0aFswXTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBsZXQgZmlyc3RTZWdtZW50ID0gcGFyYW0ucGF0aFswXTtcclxuICAgICAgICBsZXQgcmVtYWluaW5nU2VnbWVudHMgPSBwYXJhbS5wYXRoLnNsaWNlKDEpO1xyXG4gICAgICAgIHBhcmFtLnBhdGggPSBmaXJzdFNlZ21lbnQgKyAnWycgKyByZW1haW5pbmdTZWdtZW50cy5qb2luKCddWycpICsgJ10nO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBwYXJhbTtcclxuICAgIH0pXHJcbiAgICAubWFwKHBhcmFtID0+IGVuY29kZVVSSUNvbXBvbmVudChwYXJhbS5wYXRoKSArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudChwYXJhbS52YWwpKVxyXG4gICAgLmpvaW4oJyYnKTtcclxufVxyXG4iXX0=