"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("@orbit/utils");
function cloneRecordIdentity(identity) {
    var type = identity.type, id = identity.id;
    return { type: type, id: id };
}
exports.cloneRecordIdentity = cloneRecordIdentity;
function equalRecordIdentities(record1, record2) {
    return (utils_1.isNone(record1) && utils_1.isNone(record2)) ||
        (utils_1.isObject(record1) && utils_1.isObject(record2) &&
            record1.type === record2.type &&
            record1.id === record2.id);
}
exports.equalRecordIdentities = equalRecordIdentities;
function mergeRecords(current, updates) {
    if (current) {
        var record_1 = cloneRecordIdentity(current);
        ['attributes', 'keys', 'relationships'].forEach(function (grouping) {
            if (current[grouping] && updates[grouping]) {
                record_1[grouping] = utils_1.merge({}, current[grouping], updates[grouping]);
            }
            else if (current[grouping]) {
                record_1[grouping] = utils_1.merge({}, current[grouping]);
            }
            else if (updates[grouping]) {
                record_1[grouping] = utils_1.merge({}, updates[grouping]);
            }
        });
        return record_1;
    }
    else {
        return updates;
    }
}
exports.mergeRecords = mergeRecords;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVjb3JkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic3JjL3JlY29yZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHNDQUE2RDtBQTJCN0QsNkJBQW9DLFFBQXdCO0lBQ2xELElBQUEsb0JBQUksRUFBRSxnQkFBRSxDQUFjO0lBQzlCLE1BQU0sQ0FBQyxFQUFFLElBQUksTUFBQSxFQUFFLEVBQUUsSUFBQSxFQUFFLENBQUM7QUFDdEIsQ0FBQztBQUhELGtEQUdDO0FBRUQsK0JBQXNDLE9BQXVCLEVBQUUsT0FBdUI7SUFDcEYsTUFBTSxDQUFDLENBQUMsY0FBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLGNBQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNwQyxDQUFDLGdCQUFRLENBQUMsT0FBTyxDQUFDLElBQUksZ0JBQVEsQ0FBQyxPQUFPLENBQUM7WUFDdEMsT0FBTyxDQUFDLElBQUksS0FBSyxPQUFPLENBQUMsSUFBSTtZQUM3QixPQUFPLENBQUMsRUFBRSxLQUFLLE9BQU8sQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUNyQyxDQUFDO0FBTEQsc0RBS0M7QUFFRCxzQkFBNkIsT0FBc0IsRUFBRSxPQUFlO0lBQ2xFLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFDWixJQUFJLFFBQU0sR0FBRyxtQkFBbUIsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUUxQyxDQUFDLFlBQVksRUFBRSxNQUFNLEVBQUUsZUFBZSxDQUFDLENBQUMsT0FBTyxDQUFDLFVBQUEsUUFBUTtZQUN0RCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDM0MsUUFBTSxDQUFDLFFBQVEsQ0FBQyxHQUFHLGFBQUssQ0FBQyxFQUFFLEVBQUUsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ3JFLENBQUM7WUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDN0IsUUFBTSxDQUFDLFFBQVEsQ0FBQyxHQUFHLGFBQUssQ0FBQyxFQUFFLEVBQUUsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDbEQsQ0FBQztZQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUM3QixRQUFNLENBQUMsUUFBUSxDQUFDLEdBQUcsYUFBSyxDQUFDLEVBQUUsRUFBRSxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNsRCxDQUFDO1FBQ0gsQ0FBQyxDQUFDLENBQUM7UUFFSCxNQUFNLENBQUMsUUFBTSxDQUFDO0lBQ2hCLENBQUM7SUFBQyxJQUFJLENBQUMsQ0FBQztRQUNOLE1BQU0sQ0FBQyxPQUFPLENBQUM7SUFDakIsQ0FBQztBQUNILENBQUM7QUFsQkQsb0NBa0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGljdCwgaXNPYmplY3QsIGlzTm9uZSwgbWVyZ2UgfSBmcm9tICdAb3JiaXQvdXRpbHMnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBSZWNvcmRJZGVudGl0eSB7XHJcbiAgdHlwZTogc3RyaW5nO1xyXG4gIGlkOiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgUmVjb3JkSGFzT25lUmVsYXRpb25zaGlwIHtcclxuICBkYXRhOiBSZWNvcmRJZGVudGl0eSB8IG51bGw7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgUmVjb3JkSGFzTWFueVJlbGF0aW9uc2hpcCB7XHJcbiAgZGF0YTogUmVjb3JkSWRlbnRpdHlbXTtcclxufVxyXG5cclxuZXhwb3J0IHR5cGUgUmVjb3JkUmVsYXRpb25zaGlwID0gUmVjb3JkSGFzT25lUmVsYXRpb25zaGlwIHwgUmVjb3JkSGFzTWFueVJlbGF0aW9uc2hpcDtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgUmVjb3JkIGV4dGVuZHMgUmVjb3JkSWRlbnRpdHkge1xyXG4gIGtleXM/OiBEaWN0PHN0cmluZz47XHJcbiAgYXR0cmlidXRlcz86IERpY3Q8YW55PjtcclxuICByZWxhdGlvbnNoaXBzPzogRGljdDxSZWNvcmRSZWxhdGlvbnNoaXA+O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFJlY29yZEluaXRpYWxpemVyIHtcclxuICBpbml0aWFsaXplUmVjb3JkKHJlY29yZDogUmVjb3JkKTogdm9pZDtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNsb25lUmVjb3JkSWRlbnRpdHkoaWRlbnRpdHk6IFJlY29yZElkZW50aXR5KTogUmVjb3JkSWRlbnRpdHkge1xyXG4gIGNvbnN0IHsgdHlwZSwgaWQgfSA9IGlkZW50aXR5O1xyXG4gIHJldHVybiB7IHR5cGUsIGlkIH07XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBlcXVhbFJlY29yZElkZW50aXRpZXMocmVjb3JkMTogUmVjb3JkSWRlbnRpdHksIHJlY29yZDI6IFJlY29yZElkZW50aXR5KTogYm9vbGVhbiB7XHJcbiAgcmV0dXJuIChpc05vbmUocmVjb3JkMSkgJiYgaXNOb25lKHJlY29yZDIpKSB8fFxyXG4gICAgICAgICAoaXNPYmplY3QocmVjb3JkMSkgJiYgaXNPYmplY3QocmVjb3JkMikgJiZcclxuICAgICAgICAgIHJlY29yZDEudHlwZSA9PT0gcmVjb3JkMi50eXBlICYmXHJcbiAgICAgICAgICByZWNvcmQxLmlkID09PSByZWNvcmQyLmlkKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlUmVjb3JkcyhjdXJyZW50OiBSZWNvcmQgfCBudWxsLCB1cGRhdGVzOiBSZWNvcmQpOiBSZWNvcmQge1xyXG4gIGlmIChjdXJyZW50KSB7XHJcbiAgICBsZXQgcmVjb3JkID0gY2xvbmVSZWNvcmRJZGVudGl0eShjdXJyZW50KTtcclxuXHJcbiAgICBbJ2F0dHJpYnV0ZXMnLCAna2V5cycsICdyZWxhdGlvbnNoaXBzJ10uZm9yRWFjaChncm91cGluZyA9PiB7XHJcbiAgICAgIGlmIChjdXJyZW50W2dyb3VwaW5nXSAmJiB1cGRhdGVzW2dyb3VwaW5nXSkge1xyXG4gICAgICAgIHJlY29yZFtncm91cGluZ10gPSBtZXJnZSh7fSwgY3VycmVudFtncm91cGluZ10sIHVwZGF0ZXNbZ3JvdXBpbmddKTtcclxuICAgICAgfSBlbHNlIGlmIChjdXJyZW50W2dyb3VwaW5nXSkge1xyXG4gICAgICAgIHJlY29yZFtncm91cGluZ10gPSBtZXJnZSh7fSwgY3VycmVudFtncm91cGluZ10pO1xyXG4gICAgICB9IGVsc2UgaWYgKHVwZGF0ZXNbZ3JvdXBpbmddKSB7XHJcbiAgICAgICAgcmVjb3JkW2dyb3VwaW5nXSA9IG1lcmdlKHt9LCB1cGRhdGVzW2dyb3VwaW5nXSk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIHJldHVybiByZWNvcmQ7XHJcbiAgfSBlbHNlIHtcclxuICAgIHJldHVybiB1cGRhdGVzO1xyXG4gIH1cclxufVxyXG4iXX0=