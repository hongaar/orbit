"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("@orbit/utils");
var data_1 = require("@orbit/data");
exports.PullOperators = {
    findRecords: function (source, expression) {
        var operations = [];
        var typeFilter = expression.type;
        for (var key in data_1.default.globals.localStorage) {
            if (key.indexOf(source.namespace) === 0) {
                var typesMatch = utils_1.isNone(typeFilter);
                if (!typesMatch) {
                    var fragments = key.split(source.delimiter);
                    var type = fragments[1];
                    typesMatch = (typeFilter === type);
                }
                if (typesMatch) {
                    var record = JSON.parse(data_1.default.globals.localStorage.getItem(key));
                    if (source.keyMap) {
                        source.keyMap.pushRecord(record);
                    }
                    operations.push({
                        op: 'addRecord',
                        record: record
                    });
                }
            }
        }
        return data_1.default.Promise.resolve([data_1.buildTransform(operations)]);
    },
    findRecord: function (source, expression) {
        var operations = [];
        var requestedRecord = expression.record;
        for (var key in data_1.default.globals.localStorage) {
            if (key.indexOf(source.namespace) === 0) {
                var fragments = key.split(source.delimiter);
                var type = fragments[1];
                var id = fragments[2];
                if (type === requestedRecord.type &&
                    id === requestedRecord.id) {
                    var record = JSON.parse(data_1.default.globals.localStorage.getItem(key));
                    if (source.keyMap) {
                        source.keyMap.pushRecord(record);
                    }
                    operations.push({
                        op: 'addRecord',
                        record: record
                    });
                    break;
                }
            }
        }
        return data_1.default.Promise.resolve([data_1.buildTransform(operations)]);
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVsbC1vcGVyYXRvcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvbGliL3B1bGwtb3BlcmF0b3JzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQTJDO0FBQzNDLG9DQU1xQjtBQU9SLFFBQUEsYUFBYSxHQUF1QjtJQUMvQyxXQUFXLEVBQVgsVUFBWSxNQUEwQixFQUFFLFVBQXVCO1FBQzdELElBQU0sVUFBVSxHQUFHLEVBQUUsQ0FBQztRQUV0QixJQUFNLFVBQVUsR0FBRyxVQUFVLENBQUMsSUFBSSxDQUFDO1FBRW5DLEdBQUcsQ0FBQyxDQUFDLElBQUksR0FBRyxJQUFJLGNBQUssQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztZQUMzQyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUN4QyxJQUFJLFVBQVUsR0FBRyxjQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7Z0JBRXBDLEVBQUUsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztvQkFDaEIsSUFBSSxTQUFTLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7b0JBQzVDLElBQUksSUFBSSxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDeEIsVUFBVSxHQUFHLENBQUMsVUFBVSxLQUFLLElBQUksQ0FBQyxDQUFDO2dCQUNyQyxDQUFDO2dCQUVELEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7b0JBQ2YsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxjQUFLLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztvQkFFakUsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7d0JBQ2xCLE1BQU0sQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO29CQUNuQyxDQUFDO29CQUVELFVBQVUsQ0FBQyxJQUFJLENBQUM7d0JBQ2QsRUFBRSxFQUFFLFdBQVc7d0JBQ2YsTUFBTSxRQUFBO3FCQUNQLENBQUMsQ0FBQztnQkFDTCxDQUFDO1lBQ0gsQ0FBQztRQUNILENBQUM7UUFFRCxNQUFNLENBQUMsY0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxxQkFBYyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUM3RCxDQUFDO0lBRUQsVUFBVSxFQUFWLFVBQVcsTUFBMEIsRUFBRSxVQUFzQjtRQUMzRCxJQUFNLFVBQVUsR0FBRyxFQUFFLENBQUM7UUFDdEIsSUFBTSxlQUFlLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQztRQUUxQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEdBQUcsSUFBSSxjQUFLLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUM7WUFDM0MsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDeEMsSUFBSSxTQUFTLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7Z0JBQzVDLElBQUksSUFBSSxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDeEIsSUFBSSxFQUFFLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUV0QixFQUFFLENBQUMsQ0FBQyxJQUFJLEtBQUssZUFBZSxDQUFDLElBQUk7b0JBQzdCLEVBQUUsS0FBSyxlQUFlLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztvQkFDOUIsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxjQUFLLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztvQkFFakUsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7d0JBQ2xCLE1BQU0sQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO29CQUNuQyxDQUFDO29CQUVELFVBQVUsQ0FBQyxJQUFJLENBQUM7d0JBQ2QsRUFBRSxFQUFFLFdBQVc7d0JBQ2YsTUFBTSxRQUFBO3FCQUNQLENBQUMsQ0FBQztvQkFFSCxLQUFLLENBQUM7Z0JBQ1IsQ0FBQztZQUNILENBQUM7UUFDSCxDQUFDO1FBRUQsTUFBTSxDQUFDLGNBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMscUJBQWMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDN0QsQ0FBQztDQUNGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaWN0LCBpc05vbmUgfSBmcm9tICdAb3JiaXQvdXRpbHMnXHJcbmltcG9ydCBPcmJpdCwge1xyXG4gIFF1ZXJ5RXhwcmVzc2lvbixcclxuICBUcmFuc2Zvcm0sXHJcbiAgRmluZFJlY29yZCxcclxuICBGaW5kUmVjb3JkcyxcclxuICBidWlsZFRyYW5zZm9ybVxyXG59IGZyb20gJ0BvcmJpdC9kYXRhJztcclxuaW1wb3J0IExvY2FsU3RvcmFnZVNvdXJjZSBmcm9tICcuLi9zb3VyY2UnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBQdWxsT3BlcmF0b3Ige1xyXG4gIChzb3VyY2U6IExvY2FsU3RvcmFnZVNvdXJjZSwgZXhwcmVzc2lvbjogUXVlcnlFeHByZXNzaW9uKTogUHJvbWlzZTxUcmFuc2Zvcm1bXT47XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBQdWxsT3BlcmF0b3JzOiBEaWN0PFB1bGxPcGVyYXRvcj4gPSB7XHJcbiAgZmluZFJlY29yZHMoc291cmNlOiBMb2NhbFN0b3JhZ2VTb3VyY2UsIGV4cHJlc3Npb246IEZpbmRSZWNvcmRzKTogUHJvbWlzZTxUcmFuc2Zvcm1bXT4ge1xyXG4gICAgY29uc3Qgb3BlcmF0aW9ucyA9IFtdO1xyXG5cclxuICAgIGNvbnN0IHR5cGVGaWx0ZXIgPSBleHByZXNzaW9uLnR5cGU7XHJcblxyXG4gICAgZm9yIChsZXQga2V5IGluIE9yYml0Lmdsb2JhbHMubG9jYWxTdG9yYWdlKSB7XHJcbiAgICAgIGlmIChrZXkuaW5kZXhPZihzb3VyY2UubmFtZXNwYWNlKSA9PT0gMCkge1xyXG4gICAgICAgIGxldCB0eXBlc01hdGNoID0gaXNOb25lKHR5cGVGaWx0ZXIpO1xyXG5cclxuICAgICAgICBpZiAoIXR5cGVzTWF0Y2gpIHtcclxuICAgICAgICAgIGxldCBmcmFnbWVudHMgPSBrZXkuc3BsaXQoc291cmNlLmRlbGltaXRlcik7XHJcbiAgICAgICAgICBsZXQgdHlwZSA9IGZyYWdtZW50c1sxXTtcclxuICAgICAgICAgIHR5cGVzTWF0Y2ggPSAodHlwZUZpbHRlciA9PT0gdHlwZSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodHlwZXNNYXRjaCkge1xyXG4gICAgICAgICAgbGV0IHJlY29yZCA9IEpTT04ucGFyc2UoT3JiaXQuZ2xvYmFscy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpKTtcclxuXHJcbiAgICAgICAgICBpZiAoc291cmNlLmtleU1hcCkge1xyXG4gICAgICAgICAgICBzb3VyY2Uua2V5TWFwLnB1c2hSZWNvcmQocmVjb3JkKTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBvcGVyYXRpb25zLnB1c2goe1xyXG4gICAgICAgICAgICBvcDogJ2FkZFJlY29yZCcsXHJcbiAgICAgICAgICAgIHJlY29yZFxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIE9yYml0LlByb21pc2UucmVzb2x2ZShbYnVpbGRUcmFuc2Zvcm0ob3BlcmF0aW9ucyldKTtcclxuICB9LFxyXG5cclxuICBmaW5kUmVjb3JkKHNvdXJjZTogTG9jYWxTdG9yYWdlU291cmNlLCBleHByZXNzaW9uOiBGaW5kUmVjb3JkKTogUHJvbWlzZTxUcmFuc2Zvcm1bXT4ge1xyXG4gICAgY29uc3Qgb3BlcmF0aW9ucyA9IFtdO1xyXG4gICAgY29uc3QgcmVxdWVzdGVkUmVjb3JkID0gZXhwcmVzc2lvbi5yZWNvcmQ7XHJcblxyXG4gICAgZm9yIChsZXQga2V5IGluIE9yYml0Lmdsb2JhbHMubG9jYWxTdG9yYWdlKSB7XHJcbiAgICAgIGlmIChrZXkuaW5kZXhPZihzb3VyY2UubmFtZXNwYWNlKSA9PT0gMCkge1xyXG4gICAgICAgIGxldCBmcmFnbWVudHMgPSBrZXkuc3BsaXQoc291cmNlLmRlbGltaXRlcik7XHJcbiAgICAgICAgbGV0IHR5cGUgPSBmcmFnbWVudHNbMV07XHJcbiAgICAgICAgbGV0IGlkID0gZnJhZ21lbnRzWzJdO1xyXG5cclxuICAgICAgICBpZiAodHlwZSA9PT0gcmVxdWVzdGVkUmVjb3JkLnR5cGUgJiZcclxuICAgICAgICAgICAgaWQgPT09IHJlcXVlc3RlZFJlY29yZC5pZCkge1xyXG4gICAgICAgICAgbGV0IHJlY29yZCA9IEpTT04ucGFyc2UoT3JiaXQuZ2xvYmFscy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpKTtcclxuXHJcbiAgICAgICAgICBpZiAoc291cmNlLmtleU1hcCkge1xyXG4gICAgICAgICAgICBzb3VyY2Uua2V5TWFwLnB1c2hSZWNvcmQocmVjb3JkKTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBvcGVyYXRpb25zLnB1c2goe1xyXG4gICAgICAgICAgICBvcDogJ2FkZFJlY29yZCcsXHJcbiAgICAgICAgICAgIHJlY29yZFxyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIE9yYml0LlByb21pc2UucmVzb2x2ZShbYnVpbGRUcmFuc2Zvcm0ob3BlcmF0aW9ucyldKTtcclxuICB9XHJcbn07XHJcbiJdfQ==